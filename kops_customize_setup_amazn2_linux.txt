Add in .bashrc:-
----------------
#vim .bashrc
#export PATH=$PATH:/usr/local/bin/
#source .bashrc

Manual:-
------------------

#! /bin/bash
aws configure
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
wget https://github.com/kubernetes/kops/releases/download/v1.25.0/kops-linux-amd64
chmod +x kops-linux-amd64 kubectl
mv kubectl /usr/local/bin/kubectl
mv kops-linux-amd64 /usr/local/bin/kops
aws s3api create-bucket --bucket myktiwaribuck.k8s.local --region us-east-1
aws s3api put-bucket-versioning --bucket myktiwaribuck.k8s.local --region us-east-1 --versioning-configuration Status=Enabled
export KOPS_STATE_STORE=s3://myktiwaribuck.k8s.local
kops create cluster --name mykt.k8s.local --zones us-east-1a --master-count=1 --master-size t3a.small --node-count=2 --node-size t3a.micro --image ami-020cba7c55df1f615
kops update cluster --name mykt.k8s.local --yes --admin

Script:-
--------------

#! /bin/bash
export AWS_ACCESS_KEY_ID=AKIAZI2LVVVVVVVVVVVVV
export AWS_SECRET_ACCESS_KEY=aREnCC/R+khSext0caj9VHHGFHJKUUYYYYYYYYY
export AWS_DEFAULT_REGION=us-east-1

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
wget https://github.com/kubernetes/kops/releases/download/v1.25.0/kops-linux-amd64
chmod +x kops-linux-amd64 kubectl
mv kubectl /usr/local/bin/kubectl
mv kops-linux-amd64 /usr/local/bin/kops
aws s3api create-bucket --bucket myktiwaribuck.k8s.local --region us-east-1
aws s3api put-bucket-versioning --bucket myktiwaribuck.k8s.local --region us-east-1 --versioning-configuration Status=Enabled
export KOPS_STATE_STORE=s3://myktiwaribuck.k8s.local
kops create cluster --name mykt.k8s.local --zones us-east-1a --master-count=1 --master-size t3a.small --node-count=2 --node-size t3a.micro --image ami-020cba7c55df1f615
# Master IG
kops get ig master-us-east-1a --name mykt.k8s.local -o yaml \
  | sed 's/machineType: t3a.small/machineType: t3a.small\n  rootVolumeSize: 10/' \
  | kops replace -f -
# Node IG
kops get ig nodes-us-east-1a --name mykt.k8s.local -o yaml \
  | sed 's/machineType: t3a.micro/machineType: t3a.micro\n  rootVolumeSize: 10/' \
  | kops replace -f -
kops update cluster --name mykt.k8s.local --yes --admin


Customize the Cluster Configuration:-
-------------------------------------
Note: By default Master used 64 GB EBS Size & Worker Node used 128 GB EBS.
Can modify the EBS Size via below configuration.

kops edit ig master-us-east-1a --name mykt.k8s.local
kops edit ig nodes-us-east-1a --name mykt.k8s.local

(Output: Master and Node)
---
apiVersion: kops.k8s.io/v1alpha2
kind: InstanceGroup
metadata:
  creationTimestamp: "2025-08-21T07:15:52Z"
  generation: 1
  labels:
    kops.k8s.io/cluster: mykt.k8s.local
  name: master-us-east-1a
spec:
  image: ami-020cba7c55df1f615
  instanceMetadata:
    httpPutResponseHopLimit: 3
    httpTokens: required
  machineType: t3a.small
  maxSize: 1
  minSize: 1
  role: Master
  rootVolumeSize: 10    // Add this line for custom ebs size
  subnets:
  - us-east-1a
  
  
Few Commands:-
--------------

kops get cluster   // get cluster information
kops delete cluster mykt.k8s.local --yes   // delete the specified cluster 
kops edit ig master-us-east-1a --name mykt.k8s.local   // edit master configuration
kops edit ig nodes-us-east-1a --name mykt.k8s.local    // edit nodes configuration
kops update cluster --name mykt.k8s.local --yes  // update the cluster with specified with settings
kops rolling-update cluster --name mykt.k8s.local --yes   // recreate the instances with new configuration as define

Error Troubleshooting:-
----------------------
Sometimes after do some modification like EBS Size or Instance types in IG of Master or Nodes, when run the rolling-update command it gives below error:

"Unable to reach the kubernetes API.
Use --cloudonly to do a rolling-update without confirming progress with the k8s API"

How to solve this issue:

export KOPS_STATE_STORE=s3://myktiwaribuck.k8s.local
kops export kubecfg --name mykt.k8s.local
kops validate cluster --wait 10m --name mykt.k8s.local   // sometines it gives unexpected error

kops rolling-update cluster --name mykt.k8s.local --cloudonly --yes   // run the rolling update now, it will work

Output:

NAME                    STATUS          NEEDUPDATE      READY   MIN     TARGET  MAX
master-us-east-1a       NeedsUpdate     1               0       1       1       1
nodes-us-east-1a        Ready           0               2       2       2       2
W0821 10:24:39.778537    4664 instancegroups.go:470] Not validating cluster as cloudonly flag is set.
W0821 10:24:39.778719    4664 instancegroups.go:399] Not draining cluster nodes as 'cloudonly' flag is set.
I0821 10:24:39.778748    4664 instancegroups.go:595] Stopping instance "i-0430a620c13926c5b", in group "master-us-east-1a.masters.mykt.k8s.local" (this may take a while).
I0821 10:24:40.121635    4664 instancegroups.go:438] waiting for 15s after terminating instance
W0821 10:24:55.127116    4664 instancegroups.go:470] Not validating cluster as cloudonly flag is set.
I0821 10:24:55.127154    4664 rollingupdate.go:210] Rolling update completed for cluster "mykt.k8s.local"!



